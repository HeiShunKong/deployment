version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    hostname: zookeeper
    volumes:
      - /home/azureuser/zookeeper/data:/opt/zookeeper-3.4.13/data
      - /home/azureuser/logs:/logs 

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: mysql-3855.centralus.cloudapp.azure.com # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://mysql-3855.centralus.cloudapp.azure.com:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/azureuser/kafka:/kafka/kafka-logs
      - /home/azureuser/logs:/logs 
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - "zookeeper"

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'movies_reviews_db'
      MYSQL_USER: 'root'
      MYSQL_PASSWORD: 'yourpassword'
      MYSQL_ROOT_PASSWORD: 'yourpassword'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - my-db:/var/lib/mysql
      - /home/azureuser/logs:/logs 

  receiver:
    image: receiver
    ports:
      - "8080:8080"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/azureuser/config/receiver:/config
      - /home/azureuser/logs:/logs
    depends_on:
      kafka:
        condition: service_healthy
      db:
        condition: service_started

  storage:
    image: storage
    ports:
      - "8090:8090"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/azureuser/config/storage:/config
      - /home/azureuser/logs:/logs
    depends_on:
      kafka:
        condition: service_healthy
      db:
        condition: service_started

  processing:
    image: processing
    network_mode: "host"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/azureuser/config/processing:/config
      - /home/azureuser/logs:/logs
      - processing-db:/data  
    depends_on:
      - storage

  analyzer:
    image: analyzer
    ports:
      - "8110:8110"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/azureuser/config/analyzer:/config
      - /home/azureuser/logs:/logs
    depends_on:
      kafka:
        condition: service_healthy
      db:
        condition: service_started

  anomaly_detector:
    image: anomaly_detector
    ports:
      - "8120:8120"
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/azureuser/config/anomaly_detector:/config
      - /home/azureuser/logs:/logs
      - anomaly-data:/data
    depends_on:
      kafka:
        condition: service_healthy

  dashboard:
    image: dashboard
    ports:
      - "3000:3000"
    depends_on:
      - processing
      - analyzer
      - anomaly_detector

volumes:
  my-db:
  processing-db:
  anomaly-data:
